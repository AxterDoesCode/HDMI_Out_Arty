//
// Generated by Bluespec Compiler, version no-git (build 0000000)
//
// On Sat Aug  2 17:05:26 UTC 2025
//
//
// Ports:
// Name                         I/O  size props
// encode                         O    10
// CLK                            I     1 clock
// RST_N                          I     1 reset
// encode_d_in                    I     8
// encode_cd                      I     2
// encode_de                      I     1
//
// Combinational paths from inputs to outputs:
//   (encode_d_in, encode_cd, encode_de) -> encode
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTMDS_encoder(CLK,
		      RST_N,

		      encode_d_in,
		      encode_cd,
		      encode_de,
		      encode);
  input  CLK;
  input  RST_N;

  // actionvalue method encode
  input  [7 : 0] encode_d_in;
  input  [1 : 0] encode_cd;
  input  encode_de;
  output [9 : 0] encode;

  // signals for module outputs
  wire [9 : 0] encode;

  // inlined wires
  wire [4 : 0] cnt$port0__write_1;

  // register cnt
  reg [4 : 0] cnt;
  wire [4 : 0] cnt$D_IN;
  wire cnt$EN;

  // remaining internal signals
  reg [9 : 0] v__h5147;
  wire [9 : 0] v__h207;
  wire [8 : 0] IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1;
  wire [7 : 0] IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d126,
	       IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d127,
	       IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d128;
  wire [4 : 0] IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d45,
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d57,
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d69,
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75,
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d97,
	       IF_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d102,
	       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d83,
	       IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d106,
	       IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d107,
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28,
	       _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76;
  wire IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67,
       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73,
       IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d109,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d42,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d48,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d54,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d60,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d66,
       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29,
       INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_ETC___d41,
       INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_ETC___d47,
       INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_EL_ETC___d53,
       INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN__ETC___d59,
       INV_INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_T_ETC___d65;

  // actionvalue method encode
  assign encode = encode_de ? v__h207 : v__h5147 ;

  // inlined wires
  assign cnt$port0__write_1 =
	     encode_de ?
	       IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d107 :
	       5'd0 ;

  // register cnt
  assign cnt$D_IN = cnt$port0__write_1 ;
  assign cnt$EN = 1'b1 ;

  // remaining internal signals
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d45 =
	     (IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] ? 5'd1 : 5'd0) +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37 ?
		5'd1 :
		5'd0) +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43 ?
		5'd1 :
		5'd0) ;
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d57 =
	     IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d45 +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49 ?
		5'd1 :
		5'd0) +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55 ?
		5'd1 :
		5'd0) ;
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d69 =
	     IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d57 +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61 ?
		5'd1 :
		5'd0) +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67 ?
		5'd1 :
		5'd0) ;
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 =
	     IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d69 +
	     (IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73 ?
		5'd1 :
		5'd0) ;
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d126 =
	     (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 &&
	      (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 !=
	       5'd4 ||
	       encode_d_in[0])) ?
	       { IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37,
		 IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] } :
	       { ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37,
		 ~IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] } ;
  assign IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d97 =
	     (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 &&
	      (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 !=
	       5'd4 ||
	       encode_d_in[0])) ?
	       5'd2 :
	       5'd0 ;
  assign IF_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d102 =
	     (~(IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 &&
		(IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 !=
		 5'd4 ||
		 encode_d_in[0]))) ?
	       5'd2 :
	       5'd0 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       ~IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_ETC___d41 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d42 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_ETC___d47 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d48 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_EL_ETC___d53 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d54 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN__ETC___d59 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d60 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       INV_INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_T_ETC___d65 :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d66 ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       ~(INV_INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_T_ETC___d65 ^
		 encode_d_in[7]) :
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d66 ^
	       encode_d_in[7] ;
  assign IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d83 =
	     (!IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 ||
	      IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 ==
	      5'd4 &&
	      !encode_d_in[0]) ?
	       cnt +
	       _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 -
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 :
	       cnt +
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 -
	       _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 ;
  assign IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d106 =
	     ((cnt ^ 5'h10) > 5'd16 &&
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 >
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 ||
	      cnt[4] &&
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 >
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75) ?
	       cnt +
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d97 +
	       (_8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 -
		IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75) :
	       (cnt -
		IF_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d102) +
	       (IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 -
		_8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76) ;
  assign IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d127 =
	     ((cnt ^ 5'h10) > 5'd16 &&
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 >
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 ||
	      cnt[4] &&
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 >
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75) ?
	       { ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43,
		 ~IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37,
		 ~IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] } :
	       { IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d73,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d67,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d61,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d55,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d49,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d43,
		 IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d37,
		 IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] } ;
  assign IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d107 =
	     (cnt == 5'b0 ||
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 ==
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76) ?
	       IF_NOT_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_ETC___d83 :
	       IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d106 ;
  assign IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d109 =
	     (cnt == 5'b0 ||
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 ==
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76) ?
	       ~(IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 &&
		 (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 !=
		  5'd4 ||
		  encode_d_in[0])) :
	       (cnt ^ 5'h10) > 5'd16 &&
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 >
	       _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 ||
	       cnt[4] &&
	       _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 >
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 ;
  assign IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d128 =
	     (cnt == 5'b0 ||
	      IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 ==
	      _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76) ?
	       IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF__ETC___d126 :
	       IF_NOT_cnt_port0__read_SLE_0_4_5_AND_NOT_IF_IF_ETC___d127 ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1[0] ^ encode_d_in[1] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d42 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35 ^
	     encode_d_in[2] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d48 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d42 ^
	     encode_d_in[3] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d54 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d48 ^
	     encode_d_in[4] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d60 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d54 ^
	     encode_d_in[5] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d66 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d60 ^
	     encode_d_in[6] ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 =
	     (encode_d_in[0] ? 5'd1 : 5'd0) + (encode_d_in[1] ? 5'd1 : 5'd0) +
	     (encode_d_in[2] ? 5'd1 : 5'd0) +
	     (encode_d_in[3] ? 5'd1 : 5'd0) +
	     (encode_d_in[4] ? 5'd1 : 5'd0) +
	     (encode_d_in[5] ? 5'd1 : 5'd0) +
	     (encode_d_in[6] ? 5'd1 : 5'd0) +
	     (encode_d_in[7] ? 5'd1 : 5'd0) ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 =
	     IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 <=
	     5'd4 ;
  assign IF_encode_d_in_BIT_0_THEN_1_ELSE_0__q1 =
	     encode_d_in[0] ? 9'd1 : 9'd0 ;
  assign INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_ETC___d41 =
	     ~(~IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_XOR_e_ETC___d35 ^
	       encode_d_in[2]) ;
  assign INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_ETC___d47 =
	     ~(INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_ETC___d41 ^
	       encode_d_in[3]) ;
  assign INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_EL_ETC___d53 =
	     ~(INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_ETC___d47 ^
	       encode_d_in[4]) ;
  assign INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN__ETC___d59 =
	     ~(INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN_1_EL_ETC___d53 ^
	       encode_d_in[5]) ;
  assign INV_INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_T_ETC___d65 =
	     ~(INV_INV_INV_INV_INV_IF_encode_d_in_BIT_0_THEN__ETC___d59 ^
	       encode_d_in[6]) ;
  assign _8_MINUS_IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0__ETC___d76 =
	     5'd8 - IF_IF_encode_d_in_BIT_0_THEN_1_ELSE_0_BIT_0_TH_ETC___d75 ;
  assign v__h207 =
	     { IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d109,
	       IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d29 &&
	       (IF_encode_d_in_BIT_0_THEN_1_ELSE_0_PLUS_IF_enc_ETC___d28 !=
		5'd4 ||
		encode_d_in[0]),
	       IF_cnt_port0__read_EQ_0b0_OR_IF_IF_encode_d_in_ETC___d128 } ;
  always@(encode_cd)
  begin
    case (encode_cd)
      2'b0: v__h5147 = 10'b1101010100;
      2'b01: v__h5147 = 10'b0010101011;
      2'b10: v__h5147 = 10'b0101010100;
      2'd3: v__h5147 = 10'b1010101011;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (cnt$EN) cnt <= `BSV_ASSIGNMENT_DELAY cnt$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cnt = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTMDS_encoder

